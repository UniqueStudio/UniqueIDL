syntax = "proto3";

option go_package = "";

package sms;

/*
    In practice, TemplateId and SignId in pushing service are always virtual
    to tolerant backend service changing.
*/
message PushSMSRequest {
  repeated string PhoneNumber = 1;
  repeated string TemplateParamSet = 2;
  string TemplateId = 3;
  string SignId = 4;
}

message PushSMSResponse { repeated SMSStatus SMSStatus = 1; }

message SMSStatus {
  string SerialNo = 1;
  string PhoneNumber = 2;
  uint64 Fee = 3;
  string ErrCode = 4;
  string Message = 5;
}

message AddSMSSignatureRequest { repeated SMSSignature Signatures = 1; }

message SMSSignature {
  string SignId = 1;
  string SignContent = 2;
}

message AddSMSTemplateRequest { repeated SMSTemplate Templates = 1; }

message SMSTemplate {
  string TemplateId = 1;
  string SignContent = 2;
  int32 ParamNumber = 3;
}

message GetAllTemplatesRequest {}

message GetAllTemplatesResponse {}

/*
    Id is the virtual id mapping to the real signId / templateId
*/
message UniformResponse { repeated AddStatus Status = 1; }

message AddStatus {
  bool Success = 1;
  string Message = 2;
  string Id = 3;
}

service SMSService {
  rpc PushSMS(PushSMSRequest) returns (PushSMSResponse);

  rpc AddSMSSignature(AddSMSSignatureRequest) returns (UniformResponse);
  rpc AddSMSTemplate(AddSMSTemplateRequest) returns (UniformResponse);

  rpc GetAllTemplates(GetAllTemplatesRequest) returns (GetAllTemplatesResponse);
}